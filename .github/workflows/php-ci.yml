name: PHP CI Pipeline

on:
  push:
    branches: [master, develop ]
  pull_request:

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo, pdo_sqlite, sqlite3, xdebug
          coverage: xdebug
          tools: composer:v2

      - name: Validate composer.json
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: Create SQLite database
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Run tests
        run: vendor/bin/phpunit --config phpunit-config.xml

      - name: Run test coverage
        run: |
          XDEBUG_MODE=coverage vendor/bin/phpunit --config phpunit-config.xml --coverage-clover coverage.xml

      - name: Upload coverage report
        uses: codecov/codecov-action@v5
        if: success()  # Only run if previous steps succeed
        continue-on-error: true  # Don't fail the entire workflow if this step fails


  static-analysis:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo, pdo_sqlite
          tools: composer:v2, phpstan, php-cs-fixer

      - name: Install dependencies
        run: composer install --prefer-dist --no-progress

      - name: PHPStan Static Analysis
        run: vendor/bin/phpstan analyze -l 5 src

      - name: PHP_CodeSniffer
        run: vendor/bin/phpcs --standard=PSR12 src

      - name: PHP Mess Detector
        run: vendor/bin/phpmd src text cleancode,codesize,controversial,design,naming,unusedcode

  docker-build:
    runs-on: ubuntu-latest
    needs: [build-test, static-analysis]
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build development image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: myapp:development
          target: development
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build production image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: false
          tags: myapp:production
          target: production
          cache-from: type=gha
          cache-to: type=gha,mode=max